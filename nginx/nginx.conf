user nginx;

worker_processes 1;

# Logging to stderr enables better integration with Docker and GKE/Kubernetes.
error_log stderr warn;

events { worker_connections 4096; }

http {
    include /etc/nginx/mime.types;
    server_tokens off;

    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /dev/stdout main;

    sendfile on;

    # compression settings
    gzip on;
    gzip_http_version 1.0;
    gzip_comp_level 2;
    gzip_proxied any;
    gzip_min_length  1100;
    gzip_buffers 16 8k;

    # Expires map
    map $sent_http_content_type $expires {
        default                    off;
        text/html                  epoch;
        text/css                   max;
        application/javascript     max;
        application/font-woff      max;
        application/vnd.ms-fontobject  max;
        application/x-font-ttf     max;
        ~font/                     max;
        ~image/                    max;
    }

    server {
        listen 80;
        root /usr/share/nginx/html;

        # Cache control
        expires $expires;

        # Charset
        charset utf-8;

        # Other settings
        keepalive_timeout 5;

        location / {
            try_files $uri /index.html;
        }

        # assets optimization
        location ~ ^/(assets|images|javascripts|css|stylesheets|fonts|sitemaps)/ {
            gzip_static on; # to serve pre-gzipped version
            expires max;
            add_header Cache-Control public;
        }

        error_page 404 @error404;

        location @error404 {
            rewrite ^/(de|en) /$1/404.html last;
            rewrite ^ /en/404.html last;
        }

        location ~ ^/(?:graphql) {
            proxy_read_timeout 300;
            proxy_connect_timeout 300;
            proxy_redirect off;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_pass http://localhost:3001;
        }

        location ~ ^/(?:api) {
            proxy_read_timeout 300;
            proxy_connect_timeout 300;
            proxy_redirect off;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_pass http://localhost:3001;
        }
    }
}
